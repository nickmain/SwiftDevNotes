{"abstract":[{"type":"text","text":"An ongoing collection of notes and example code for interesting and obscure features"},{"type":"text","text":" "},{"type":"text","text":"of the Swift programming language and the SwiftUI framework."}],"schemaVersion":{"major":0,"patch":0,"minor":3},"hierarchy":{"paths":[[]]},"identifier":{"url":"doc:\/\/SwiftDevNotes\/documentation\/SwiftDevNotes","interfaceLanguage":"swift"},"metadata":{"role":"collection","externalID":"SwiftDevNotes","modules":[{"name":"SwiftDevNotes"}],"roleHeading":"Framework","title":"SwiftDevNotes","symbolKind":"module"},"variants":[{"paths":["\/documentation\/swiftdevnotes"],"traits":[{"interfaceLanguage":"swift"}]}],"topicSections":[{"title":"Swift Type System","identifiers":["doc:\/\/SwiftDevNotes\/documentation\/SwiftDevNotes\/ProtocolWithOptionalMethods","doc:\/\/SwiftDevNotes\/documentation\/SwiftDevNotes\/IsOptional","doc:\/\/SwiftDevNotes\/documentation\/SwiftDevNotes\/NonCopyable"]},{"title":"Property Wrappers","identifiers":["doc:\/\/SwiftDevNotes\/documentation\/SwiftDevNotes\/PropertyWrapperProjectedValue","doc:\/\/SwiftDevNotes\/documentation\/SwiftDevNotes\/ContainerAwarePropertyWrapper"]},{"title":"SwiftUI","identifiers":["doc:\/\/SwiftDevNotes\/documentation\/SwiftDevNotes\/DynamicPropertyExample"]},{"title":"Concurrency","identifiers":["doc:\/\/SwiftDevNotes\/documentation\/SwiftDevNotes\/CustomExecutorActor","doc:\/\/SwiftDevNotes\/documentation\/SwiftDevNotes\/TaskLocals"]},{"title":"Protocols","identifiers":["doc:\/\/SwiftDevNotes\/documentation\/SwiftDevNotes\/WrapperContainer"]},{"identifiers":["doc:\/\/SwiftDevNotes\/documentation\/SwiftDevNotes\/Swift"],"title":"Extended Modules"}],"sections":[],"kind":"symbol","references":{"doc://SwiftDevNotes/documentation/SwiftDevNotes/TaskLocals":{"type":"topic","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"TaskLocals"}],"navigatorTitle":[{"text":"TaskLocals","kind":"identifier"}],"url":"\/documentation\/swiftdevnotes\/tasklocals","title":"TaskLocals","abstract":[],"kind":"symbol","identifier":"doc:\/\/SwiftDevNotes\/documentation\/SwiftDevNotes\/TaskLocals"},"doc://SwiftDevNotes/documentation/SwiftDevNotes/ContainerAwarePropertyWrapper":{"type":"topic","url":"\/documentation\/swiftdevnotes\/containerawarepropertywrapper","role":"symbol","title":"ContainerAwarePropertyWrapper","kind":"symbol","abstract":[{"type":"text","text":"Using a static subscript all access of the wrapper value can be intercepted"},{"text":" ","type":"text"},{"text":"and both the container and the wrapper are available via arguments.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"ContainerAwarePropertyWrapper"}],"identifier":"doc:\/\/SwiftDevNotes\/documentation\/SwiftDevNotes\/ContainerAwarePropertyWrapper","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ContainerAwarePropertyWrapper"}]},"doc://SwiftDevNotes/documentation/SwiftDevNotes/DynamicPropertyExample/update()-7abk2":{"kind":"symbol","title":"update()","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"update","kind":"identifier"},{"kind":"text","text":"()"}],"url":"\/documentation\/swiftdevnotes\/dynamicpropertyexample\/update()-7abk2","identifier":"doc:\/\/SwiftDevNotes\/documentation\/SwiftDevNotes\/DynamicPropertyExample\/update()-7abk2","role":"symbol","abstract":[{"type":"text","text":"Updates the underlying value of the stored value."}]},"doc://SwiftDevNotes/documentation/SwiftDevNotes/DynamicPropertyExample":{"type":"topic","title":"DynamicPropertyExample","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DynamicPropertyExample"}],"navigatorTitle":[{"text":"DynamicPropertyExample","kind":"identifier"}],"url":"\/documentation\/swiftdevnotes\/dynamicpropertyexample","identifier":"doc:\/\/SwiftDevNotes\/documentation\/SwiftDevNotes\/DynamicPropertyExample","role":"symbol","abstract":[{"isActive":true,"type":"reference","identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/dynamicproperty"},{"text":" ","type":"text"},{"text":"conformance by a view member type is recognized by","type":"text"},{"type":"text","text":" "},{"text":"SwiftUI and causes it to call the ","type":"text"},{"identifier":"doc:\/\/SwiftDevNotes\/documentation\/SwiftDevNotes\/DynamicPropertyExample\/update()-7abk2","isActive":true,"type":"reference"},{"text":" method before each view render.","type":"text"}]},"doc://SwiftDevNotes/documentation/SwiftDevNotes/NonCopyable":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"NonCopyable"}],"title":"NonCopyable","identifier":"doc:\/\/SwiftDevNotes\/documentation\/SwiftDevNotes\/NonCopyable","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"NonCopyable"}],"abstract":[{"type":"text","text":"See "},{"type":"reference","identifier":"https:\/\/github.com\/apple\/swift-evolution\/blob\/main\/proposals\/0390-noncopyable-structs-and-enums.md","isActive":true}],"url":"\/documentation\/swiftdevnotes\/noncopyable","role":"symbol","type":"topic"},"https://developer.apple.com/documentation/swiftui/dynamicproperty":{"type":"link","titleInlineContent":[{"type":"text","text":"DynamicProperty protocol"}],"identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/dynamicproperty","title":"DynamicProperty protocol","url":"https:\/\/developer.apple.com\/documentation\/swiftui\/dynamicproperty"},"doc://SwiftDevNotes/documentation/SwiftDevNotes/Swift":{"kind":"symbol","role":"collection","type":"topic","identifier":"doc:\/\/SwiftDevNotes\/documentation\/SwiftDevNotes\/Swift","abstract":[],"title":"Swift","url":"\/documentation\/swiftdevnotes\/swift"},"https://github.com/apple/swift-evolution/blob/main/proposals/0390-noncopyable-structs-and-enums.md":{"identifier":"https:\/\/github.com\/apple\/swift-evolution\/blob\/main\/proposals\/0390-noncopyable-structs-and-enums.md","title":"0390-noncopyable-structs-and-enums","titleInlineContent":[{"text":"0390-noncopyable-structs-and-enums","type":"text"}],"type":"link","url":"https:\/\/github.com\/apple\/swift-evolution\/blob\/main\/proposals\/0390-noncopyable-structs-and-enums.md"},"doc://SwiftDevNotes/documentation/SwiftDevNotes/PropertyWrapperProjectedValue":{"kind":"symbol","identifier":"doc:\/\/SwiftDevNotes\/documentation\/SwiftDevNotes\/PropertyWrapperProjectedValue","title":"PropertyWrapperProjectedValue","url":"\/documentation\/swiftdevnotes\/propertywrapperprojectedvalue","abstract":[{"text":"A property value can use a projected value to make an ancillary value available.","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"PropertyWrapperProjectedValue","kind":"identifier"}],"navigatorTitle":[{"text":"PropertyWrapperProjectedValue","kind":"identifier"}],"type":"topic"},"doc://SwiftDevNotes/documentation/SwiftDevNotes/ProtocolWithOptionalMethods":{"kind":"symbol","navigatorTitle":[{"text":"ProtocolWithOptionalMethods","kind":"identifier"}],"title":"ProtocolWithOptionalMethods","identifier":"doc:\/\/SwiftDevNotes\/documentation\/SwiftDevNotes\/ProtocolWithOptionalMethods","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ProtocolWithOptionalMethods"}],"abstract":[{"type":"text","text":"Optional methods in protocols can be simulated by providing an unconstrained default"},{"type":"text","text":" "},{"type":"text","text":"implementation in an extension."}],"url":"\/documentation\/swiftdevnotes\/protocolwithoptionalmethods","role":"symbol","type":"topic"},"doc://SwiftDevNotes/documentation/SwiftDevNotes":{"kind":"symbol","title":"SwiftDevNotes","type":"topic","url":"\/documentation\/swiftdevnotes","identifier":"doc:\/\/SwiftDevNotes\/documentation\/SwiftDevNotes","role":"collection","abstract":[{"text":"An ongoing collection of notes and example code for interesting and obscure features","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"of the Swift programming language and the SwiftUI framework."}]},"doc://SwiftDevNotes/documentation/SwiftDevNotes/CustomExecutorActor":{"kind":"symbol","type":"topic","role":"symbol","abstract":[{"text":"Set an actor to use a particular dispatch queue","type":"text"}],"url":"\/documentation\/swiftdevnotes\/customexecutoractor","navigatorTitle":[{"text":"CustomExecutorActor","kind":"identifier"}],"identifier":"doc:\/\/SwiftDevNotes\/documentation\/SwiftDevNotes\/CustomExecutorActor","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"CustomExecutorActor","kind":"identifier"}],"title":"CustomExecutorActor"},"doc://SwiftDevNotes/documentation/SwiftDevNotes/IsOptional":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"IsOptional"}],"title":"IsOptional","identifier":"doc:\/\/SwiftDevNotes\/documentation\/SwiftDevNotes\/IsOptional","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"IsOptional"}],"abstract":[{"type":"text","text":"Allow “where” clauses to specify that a type is Optional."}],"url":"\/documentation\/swiftdevnotes\/isoptional","role":"symbol","type":"topic"},"doc://SwiftDevNotes/documentation/SwiftDevNotes/WrapperContainer":{"identifier":"doc:\/\/SwiftDevNotes\/documentation\/SwiftDevNotes\/WrapperContainer","role":"symbol","navigatorTitle":[{"text":"WrapperContainer","kind":"identifier"}],"kind":"symbol","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"WrapperContainer","kind":"identifier"}],"abstract":[],"url":"\/documentation\/swiftdevnotes\/wrappercontainer","title":"WrapperContainer"}}}