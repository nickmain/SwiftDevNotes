{"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/SwiftDevNotes\/documentation\/SwiftDevNotes\/ContainerAwarePropertyWrapper\/init(wrappedValue:)"]},{"title":"Default Implementations","generated":true,"identifiers":["doc:\/\/SwiftDevNotes\/documentation\/SwiftDevNotes\/ContainerAwarePropertyWrapper\/Equatable-Implementations"]}],"sections":[],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"attribute","text":"@propertyWrapper"},{"text":" ","kind":"text"},{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ContainerAwarePropertyWrapper"}],"languages":["swift"],"platforms":["iOS"]}]},{"kind":"content","content":[{"type":"heading","text":"Overview","level":2,"anchor":"overview"},{"syntax":"swift","type":"codeListing","code":["public static subscript(","    _enclosingInstance instance: WrapperContainer,","    wrapped wrappedKeyPath: ReferenceWritableKeyPath<WrapperContainer, String>,","    storage storageKeyPath: ReferenceWritableKeyPath<WrapperContainer, Self>",") -> String {","    get {","        let propertyWrapper = instance[keyPath: storageKeyPath]","        ...","    }","    set {","        let propertyWrapper = instance[keyPath: storageKeyPath]","        ...","    }","}"]}]}],"abstract":[{"text":"Using a static subscript all access of the wrapper value can be intercepted","type":"text"},{"type":"text","text":" "},{"type":"text","text":"and both the container and the wrapper are available via arguments."}],"identifier":{"url":"doc:\/\/SwiftDevNotes\/documentation\/SwiftDevNotes\/ContainerAwarePropertyWrapper","interfaceLanguage":"swift"},"relationshipsSections":[{"kind":"relationships","identifiers":["doc:\/\/SwiftDevNotes\/SQ","doc:\/\/SwiftDevNotes\/SH"],"title":"Conforms To","type":"conformsTo"}],"metadata":{"symbolKind":"struct","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"ContainerAwarePropertyWrapper","kind":"identifier"}],"title":"ContainerAwarePropertyWrapper","externalID":"s:13SwiftDevNotes29ContainerAwarePropertyWrapperV","navigatorTitle":[{"kind":"identifier","text":"ContainerAwarePropertyWrapper"}],"roleHeading":"Structure","role":"symbol","modules":[{"name":"SwiftDevNotes"}]},"variants":[{"paths":["\/documentation\/swiftdevnotes\/containerawarepropertywrapper"],"traits":[{"interfaceLanguage":"swift"}]}],"seeAlsoSections":[{"title":"Property Wrappers","generated":true,"identifiers":["doc:\/\/SwiftDevNotes\/documentation\/SwiftDevNotes\/PropertyWrapperProjectedValue"]}],"hierarchy":{"paths":[["doc:\/\/SwiftDevNotes\/documentation\/SwiftDevNotes"]]},"schemaVersion":{"minor":3,"major":0,"patch":0},"references":{"doc://SwiftDevNotes/documentation/SwiftDevNotes/ContainerAwarePropertyWrapper/Equatable-Implementations":{"url":"\/documentation\/swiftdevnotes\/containerawarepropertywrapper\/equatable-implementations","type":"topic","kind":"article","title":"Equatable Implementations","abstract":[],"identifier":"doc:\/\/SwiftDevNotes\/documentation\/SwiftDevNotes\/ContainerAwarePropertyWrapper\/Equatable-Implementations","role":"collectionGroup"},"doc://SwiftDevNotes/documentation/SwiftDevNotes/PropertyWrapperProjectedValue":{"kind":"symbol","identifier":"doc:\/\/SwiftDevNotes\/documentation\/SwiftDevNotes\/PropertyWrapperProjectedValue","title":"PropertyWrapperProjectedValue","url":"\/documentation\/swiftdevnotes\/propertywrapperprojectedvalue","abstract":[{"text":"A property value can use a projected value to make an ancillary value available.","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"PropertyWrapperProjectedValue","kind":"identifier"}],"navigatorTitle":[{"text":"PropertyWrapperProjectedValue","kind":"identifier"}],"type":"topic"},"doc://SwiftDevNotes/documentation/SwiftDevNotes/ContainerAwarePropertyWrapper/init(wrappedValue:)":{"type":"topic","url":"\/documentation\/swiftdevnotes\/containerawarepropertywrapper\/init(wrappedvalue:)","role":"symbol","title":"init(wrappedValue:)","kind":"symbol","abstract":[],"identifier":"doc:\/\/SwiftDevNotes\/documentation\/SwiftDevNotes\/ContainerAwarePropertyWrapper\/init(wrappedValue:)","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"text":"wrappedValue","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":")","kind":"text"}]},"doc://SwiftDevNotes/SQ":{"type":"unresolvable","title":"Swift.Equatable","identifier":"doc:\/\/SwiftDevNotes\/SQ"},"doc://SwiftDevNotes/SH":{"type":"unresolvable","title":"Swift.Hashable","identifier":"doc:\/\/SwiftDevNotes\/SH"},"doc://SwiftDevNotes/documentation/SwiftDevNotes/ContainerAwarePropertyWrapper":{"type":"topic","url":"\/documentation\/swiftdevnotes\/containerawarepropertywrapper","role":"symbol","title":"ContainerAwarePropertyWrapper","kind":"symbol","abstract":[{"type":"text","text":"Using a static subscript all access of the wrapper value can be intercepted"},{"text":" ","type":"text"},{"text":"and both the container and the wrapper are available via arguments.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"ContainerAwarePropertyWrapper"}],"identifier":"doc:\/\/SwiftDevNotes\/documentation\/SwiftDevNotes\/ContainerAwarePropertyWrapper","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ContainerAwarePropertyWrapper"}]},"doc://SwiftDevNotes/documentation/SwiftDevNotes":{"kind":"symbol","title":"SwiftDevNotes","type":"topic","url":"\/documentation\/swiftdevnotes","identifier":"doc:\/\/SwiftDevNotes\/documentation\/SwiftDevNotes","role":"collection","abstract":[{"text":"An ongoing collection of notes and example code for interesting and obscure features","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"of the Swift programming language and the SwiftUI framework."}]}}}