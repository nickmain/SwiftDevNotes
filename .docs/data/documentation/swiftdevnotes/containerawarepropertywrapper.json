{"schemaVersion":{"patch":0,"major":0,"minor":3},"sections":[],"kind":"symbol","abstract":[{"type":"text","text":"Using a static subscript all access of the wrapper value can be intercepted"},{"type":"text","text":" "},{"text":"and both the container and the wrapper are available via arguments.","type":"text"}],"relationshipsSections":[{"identifiers":["doc:\/\/SwiftDevNotes\/SQ","doc:\/\/SwiftDevNotes\/SH"],"type":"conformsTo","kind":"relationships","title":"Conforms To"}],"hierarchy":{"paths":[["doc:\/\/SwiftDevNotes\/documentation\/SwiftDevNotes"]]},"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"attribute","text":"@propertyWrapper"},{"kind":"text","text":" "},{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"ContainerAwarePropertyWrapper","kind":"identifier"}],"platforms":["iOS"],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"text":"Overview","anchor":"overview","type":"heading","level":2},{"code":["public static subscript(","    _enclosingInstance instance: WrapperContainer,","    wrapped wrappedKeyPath: ReferenceWritableKeyPath<WrapperContainer, String>,","    storage storageKeyPath: ReferenceWritableKeyPath<WrapperContainer, Self>",") -> String {","    get {","        let propertyWrapper = instance[keyPath: storageKeyPath]","        ...","    }","    set {","        let propertyWrapper = instance[keyPath: storageKeyPath]","        ...","    }","}"],"syntax":"swift","type":"codeListing"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SwiftDevNotes\/documentation\/SwiftDevNotes\/ContainerAwarePropertyWrapper"},"seeAlsoSections":[{"title":"Property Wrappers","generated":true,"identifiers":["doc:\/\/SwiftDevNotes\/documentation\/SwiftDevNotes\/PropertyWrapperProjectedValue"]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftdevnotes\/containerawarepropertywrapper"]}],"metadata":{"modules":[{"name":"SwiftDevNotes"}],"navigatorTitle":[{"kind":"identifier","text":"ContainerAwarePropertyWrapper"}],"role":"symbol","externalID":"s:13SwiftDevNotes29ContainerAwarePropertyWrapperV","roleHeading":"Structure","symbolKind":"struct","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ContainerAwarePropertyWrapper","kind":"identifier"}],"title":"ContainerAwarePropertyWrapper"},"topicSections":[{"identifiers":["doc:\/\/SwiftDevNotes\/documentation\/SwiftDevNotes\/ContainerAwarePropertyWrapper\/init(wrappedValue:)"],"title":"Initializers"},{"title":"Default Implementations","identifiers":["doc:\/\/SwiftDevNotes\/documentation\/SwiftDevNotes\/ContainerAwarePropertyWrapper\/Equatable-Implementations"],"generated":true}],"references":{"doc://SwiftDevNotes/documentation/SwiftDevNotes/ContainerAwarePropertyWrapper":{"title":"ContainerAwarePropertyWrapper","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"ContainerAwarePropertyWrapper","kind":"identifier"}],"navigatorTitle":[{"text":"ContainerAwarePropertyWrapper","kind":"identifier"}],"identifier":"doc:\/\/SwiftDevNotes\/documentation\/SwiftDevNotes\/ContainerAwarePropertyWrapper","role":"symbol","type":"topic","url":"\/documentation\/swiftdevnotes\/containerawarepropertywrapper","abstract":[{"text":"Using a static subscript all access of the wrapper value can be intercepted","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"and both the container and the wrapper are available via arguments."}],"kind":"symbol"},"doc://SwiftDevNotes/documentation/SwiftDevNotes":{"url":"\/documentation\/swiftdevnotes","abstract":[{"text":"An ongoing collection of notes and example code for interesting and obscure features","type":"text"},{"text":" ","type":"text"},{"text":"of the Swift programming language and the SwiftUI framework.","type":"text"}],"identifier":"doc:\/\/SwiftDevNotes\/documentation\/SwiftDevNotes","title":"SwiftDevNotes","role":"collection","kind":"symbol","type":"topic"},"doc://SwiftDevNotes/documentation/SwiftDevNotes/ContainerAwarePropertyWrapper/init(wrappedValue:)":{"title":"init(wrappedValue:)","role":"symbol","identifier":"doc:\/\/SwiftDevNotes\/documentation\/SwiftDevNotes\/ContainerAwarePropertyWrapper\/init(wrappedValue:)","kind":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"wrappedValue","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"kind":"text","text":")"}],"abstract":[],"url":"\/documentation\/swiftdevnotes\/containerawarepropertywrapper\/init(wrappedvalue:)","type":"topic"},"doc://SwiftDevNotes/SH":{"title":"Swift.Hashable","type":"unresolvable","identifier":"doc:\/\/SwiftDevNotes\/SH"},"doc://SwiftDevNotes/documentation/SwiftDevNotes/PropertyWrapperProjectedValue":{"identifier":"doc:\/\/SwiftDevNotes\/documentation\/SwiftDevNotes\/PropertyWrapperProjectedValue","type":"topic","role":"symbol","title":"PropertyWrapperProjectedValue","url":"\/documentation\/swiftdevnotes\/propertywrapperprojectedvalue","abstract":[{"type":"text","text":"A property value can use a projected value to make an ancillary value available."}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"PropertyWrapperProjectedValue","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"text":"PropertyWrapperProjectedValue","kind":"identifier"}]},"doc://SwiftDevNotes/SQ":{"title":"Swift.Equatable","type":"unresolvable","identifier":"doc:\/\/SwiftDevNotes\/SQ"},"doc://SwiftDevNotes/documentation/SwiftDevNotes/ContainerAwarePropertyWrapper/Equatable-Implementations":{"url":"\/documentation\/swiftdevnotes\/containerawarepropertywrapper\/equatable-implementations","identifier":"doc:\/\/SwiftDevNotes\/documentation\/SwiftDevNotes\/ContainerAwarePropertyWrapper\/Equatable-Implementations","type":"topic","title":"Equatable Implementations","kind":"article","abstract":[],"role":"collectionGroup"}}}