{"seeAlsoSections":[{"title":"Swift Type System","generated":true,"identifiers":["doc:\/\/SwiftDevNotes\/documentation\/SwiftDevNotes\/ProtocolWithOptionalMethods"]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"sections":[],"identifier":{"url":"doc:\/\/SwiftDevNotes\/documentation\/SwiftDevNotes\/IsOptional","interfaceLanguage":"swift"},"metadata":{"navigatorTitle":[{"kind":"identifier","text":"IsOptional"}],"symbolKind":"protocol","role":"symbol","title":"IsOptional","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"IsOptional","kind":"identifier"}],"roleHeading":"Protocol","externalID":"s:13SwiftDevNotes10IsOptionalP","modules":[{"name":"SwiftDevNotes"}]},"hierarchy":{"paths":[["doc:\/\/SwiftDevNotes\/documentation\/SwiftDevNotes"]]},"abstract":[{"text":"Allow “where” clauses to specify that a type is Optional.","type":"text"}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["iOS"],"tokens":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"IsOptional"},{"text":" : ","kind":"text"},{"text":"ExpressibleByNilLiteral","kind":"typeIdentifier","preciseIdentifier":"s:s23ExpressibleByNilLiteralP"}]}],"kind":"declarations"},{"kind":"content","content":[{"text":"Overview","anchor":"overview","level":2,"type":"heading"},{"inlineContent":[{"code":"Optional","type":"codeVoice"},{"type":"text","text":" cannot be directly used as a where-constraint but it can"},{"type":"text","text":" "},{"type":"text","text":"be achieved by conforming it to "},{"type":"codeVoice","code":"IsOptional"},{"text":".","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"This protocol also allows “casting” the wrapped value to an optional","type":"text"},{"type":"text","text":" "},{"type":"text","text":"type so that it can be unwrapped."}]},{"type":"codeListing","syntax":"swift","code":["public protocol IsOptional: ExpressibleByNilLiteral {","    associatedtype Wrapped","","    \/\/ Get the value as an optional type","    var asOptional: Wrapped? { get }","}","","extension Optional: IsOptional {","    public var asOptional: Wrapped? { self }","}","","protocol Foo {","    associatedtype Bar","","    var value: Bar { get }","    var message: String { get }","}","","extension Foo {","    var message: String { \"NOT OPTIONAL \\(value)\" }","}","","extension Foo where Bar: IsOptional {","    var message: String {","        \/\/ need to cast value to optional type","        if let value = value.asOptional {","            \"IS OPTIONAL \\(value)\"","        } else {","            \"IS OPTIONAL nil\"","        }","    }","}"]}]}],"kind":"symbol","topicSections":[{"title":"Associated Types","identifiers":["doc:\/\/SwiftDevNotes\/documentation\/SwiftDevNotes\/IsOptional\/Wrapped"]},{"title":"Instance Properties","identifiers":["doc:\/\/SwiftDevNotes\/documentation\/SwiftDevNotes\/IsOptional\/asOptional"]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftdevnotes\/isoptional"]}],"relationshipsSections":[{"identifiers":["doc:\/\/SwiftDevNotes\/s23ExpressibleByNilLiteralP"],"kind":"relationships","type":"inheritsFrom","title":"Inherits From"},{"identifiers":["doc:\/\/SwiftDevNotes\/documentation\/SwiftDevNotes\/Swift\/Optional"],"type":"conformingTypes","title":"Conforming Types","kind":"relationships"}],"references":{"doc://SwiftDevNotes/documentation/SwiftDevNotes/IsOptional/Wrapped":{"role":"symbol","kind":"symbol","abstract":[],"url":"\/documentation\/swiftdevnotes\/isoptional\/wrapped","type":"topic","identifier":"doc:\/\/SwiftDevNotes\/documentation\/SwiftDevNotes\/IsOptional\/Wrapped","title":"Wrapped","required":true,"fragments":[{"text":"associatedtype","kind":"keyword"},{"kind":"text","text":" "},{"text":"Wrapped","kind":"identifier"}]},"doc://SwiftDevNotes/documentation/SwiftDevNotes/ProtocolWithOptionalMethods":{"url":"\/documentation\/swiftdevnotes\/protocolwithoptionalmethods","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"ProtocolWithOptionalMethods","kind":"identifier"}],"abstract":[{"type":"text","text":"Optional methods in protocols can be simulated by providing an unconstrained default"},{"text":" ","type":"text"},{"type":"text","text":"implementation in an extension."}],"title":"ProtocolWithOptionalMethods","type":"topic","identifier":"doc:\/\/SwiftDevNotes\/documentation\/SwiftDevNotes\/ProtocolWithOptionalMethods","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"ProtocolWithOptionalMethods"}]},"doc://SwiftDevNotes/s23ExpressibleByNilLiteralP":{"title":"Swift.ExpressibleByNilLiteral","identifier":"doc:\/\/SwiftDevNotes\/s23ExpressibleByNilLiteralP","type":"unresolvable"},"doc://SwiftDevNotes/documentation/SwiftDevNotes":{"identifier":"doc:\/\/SwiftDevNotes\/documentation\/SwiftDevNotes","type":"topic","kind":"symbol","url":"\/documentation\/swiftdevnotes","role":"collection","title":"SwiftDevNotes","abstract":[{"text":"An ongoing collection of notes and example code for interesting and obscure features","type":"text"},{"type":"text","text":" "},{"text":"of the Swift programming language and the SwiftUI framework.","type":"text"}]},"doc://SwiftDevNotes/documentation/SwiftDevNotes/Swift/Optional":{"fragments":[{"kind":"keyword","text":"extension"},{"text":" ","kind":"text"},{"text":"Optional","kind":"identifier","preciseIdentifier":"s:Sq"}],"kind":"symbol","url":"\/documentation\/swiftdevnotes\/swift\/optional","abstract":[],"title":"Optional","identifier":"doc:\/\/SwiftDevNotes\/documentation\/SwiftDevNotes\/Swift\/Optional","navigatorTitle":[{"kind":"identifier","text":"Optional"}],"role":"symbol","type":"topic"},"doc://SwiftDevNotes/documentation/SwiftDevNotes/IsOptional":{"url":"\/documentation\/swiftdevnotes\/isoptional","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"IsOptional"}],"navigatorTitle":[{"text":"IsOptional","kind":"identifier"}],"abstract":[{"text":"Allow “where” clauses to specify that a type is Optional.","type":"text"}],"identifier":"doc:\/\/SwiftDevNotes\/documentation\/SwiftDevNotes\/IsOptional","type":"topic","kind":"symbol","title":"IsOptional"},"doc://SwiftDevNotes/documentation/SwiftDevNotes/IsOptional/asOptional":{"title":"asOptional","role":"symbol","abstract":[{"text":"Get the value as an optional type","type":"text"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"asOptional","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:13SwiftDevNotes10IsOptionalP7WrappedQa","text":"Wrapped"},{"text":"?","kind":"text"}],"identifier":"doc:\/\/SwiftDevNotes\/documentation\/SwiftDevNotes\/IsOptional\/asOptional","url":"\/documentation\/swiftdevnotes\/isoptional\/asoptional","required":true,"type":"topic"}}}