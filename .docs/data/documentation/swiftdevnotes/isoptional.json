{"identifier":{"url":"doc:\/\/SwiftDevNotes\/documentation\/SwiftDevNotes\/IsOptional","interfaceLanguage":"swift"},"metadata":{"roleHeading":"Protocol","title":"IsOptional","navigatorTitle":[{"kind":"identifier","text":"IsOptional"}],"role":"symbol","modules":[{"name":"SwiftDevNotes"}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"IsOptional"}],"externalID":"s:13SwiftDevNotes10IsOptionalP","symbolKind":"protocol"},"relationshipsSections":[{"identifiers":["doc:\/\/SwiftDevNotes\/s23ExpressibleByNilLiteralP"],"kind":"relationships","title":"Inherits From","type":"inheritsFrom"},{"kind":"relationships","title":"Conforming Types","identifiers":["doc:\/\/SwiftDevNotes\/documentation\/SwiftDevNotes\/Swift\/Optional"],"type":"conformingTypes"}],"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftdevnotes\/isoptional"]}],"abstract":[{"type":"text","text":"Allow “where” clauses to specify that a type is Optional."}],"schemaVersion":{"minor":3,"major":0,"patch":0},"hierarchy":{"paths":[["doc:\/\/SwiftDevNotes\/documentation\/SwiftDevNotes"]]},"topicSections":[{"title":"Associated Types","identifiers":["doc:\/\/SwiftDevNotes\/documentation\/SwiftDevNotes\/IsOptional\/Wrapped"]},{"identifiers":["doc:\/\/SwiftDevNotes\/documentation\/SwiftDevNotes\/IsOptional\/asOptional"],"title":"Instance Properties"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["iOS"],"tokens":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"IsOptional"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s23ExpressibleByNilLiteralP","text":"ExpressibleByNilLiteral"}]}]},{"content":[{"text":"Overview","anchor":"overview","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Optional"},{"text":" cannot be directly used as a where-constraint but this can","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"be achieved by conforming it to "},{"type":"codeVoice","code":"IsOptional"},{"text":".","type":"text"}]},{"inlineContent":[{"text":"This protocol also allows “casting” the wrapped value to an optional","type":"text"},{"type":"text","text":" "},{"text":"type so that it can be unwrapped.","type":"text"}],"type":"paragraph"},{"code":["public protocol IsOptional: ExpressibleByNilLiteral {","    associatedtype Wrapped","","    \/\/ Get the value as an optional type","    var asOptional: Wrapped? { get }","}","","extension Optional: IsOptional {","    public var asOptional: Wrapped? { self }","}","","protocol Foo {","    associatedtype Bar","","    var value: Bar { get }","    var message: String { get }","}","","extension Foo {","    var message: String { \"NOT OPTIONAL \\(value)\" }","}","","extension Foo where Bar: IsOptional {","    var message: String {","        \/\/ need to cast value to optional type","        if let value = value.asOptional {","            \"IS OPTIONAL \\(value)\"","        } else {","            \"IS OPTIONAL nil\"","        }","    }","}"],"type":"codeListing","syntax":"swift"}],"kind":"content"}],"sections":[],"seeAlsoSections":[{"title":"Swift Type System","identifiers":["doc:\/\/SwiftDevNotes\/documentation\/SwiftDevNotes\/ProtocolWithOptionalMethods"],"generated":true}],"references":{"doc://SwiftDevNotes/documentation/SwiftDevNotes/ProtocolWithOptionalMethods":{"url":"\/documentation\/swiftdevnotes\/protocolwithoptionalmethods","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ProtocolWithOptionalMethods"}],"kind":"symbol","type":"topic","navigatorTitle":[{"text":"ProtocolWithOptionalMethods","kind":"identifier"}],"identifier":"doc:\/\/SwiftDevNotes\/documentation\/SwiftDevNotes\/ProtocolWithOptionalMethods","title":"ProtocolWithOptionalMethods","role":"symbol","abstract":[{"type":"text","text":"Optional methods in protocols can be simulated by providing an unconstrained default"},{"type":"text","text":" "},{"type":"text","text":"implementation in an extension."}]},"doc://SwiftDevNotes/documentation/SwiftDevNotes/Swift/Optional":{"abstract":[],"kind":"symbol","navigatorTitle":[{"text":"Optional","kind":"identifier"}],"title":"Optional","url":"\/documentation\/swiftdevnotes\/swift\/optional","fragments":[{"kind":"keyword","text":"extension"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:Sq","text":"Optional","kind":"identifier"}],"identifier":"doc:\/\/SwiftDevNotes\/documentation\/SwiftDevNotes\/Swift\/Optional","role":"symbol","type":"topic"},"doc://SwiftDevNotes/documentation/SwiftDevNotes/IsOptional/Wrapped":{"kind":"symbol","type":"topic","identifier":"doc:\/\/SwiftDevNotes\/documentation\/SwiftDevNotes\/IsOptional\/Wrapped","url":"\/documentation\/swiftdevnotes\/isoptional\/wrapped","required":true,"abstract":[],"title":"Wrapped","role":"symbol","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Wrapped","kind":"identifier"}]},"doc://SwiftDevNotes/documentation/SwiftDevNotes/IsOptional":{"abstract":[{"type":"text","text":"Allow “where” clauses to specify that a type is Optional."}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"IsOptional"}],"kind":"symbol","identifier":"doc:\/\/SwiftDevNotes\/documentation\/SwiftDevNotes\/IsOptional","title":"IsOptional","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"IsOptional"}],"url":"\/documentation\/swiftdevnotes\/isoptional","type":"topic"},"doc://SwiftDevNotes/documentation/SwiftDevNotes":{"kind":"symbol","type":"topic","identifier":"doc:\/\/SwiftDevNotes\/documentation\/SwiftDevNotes","url":"\/documentation\/swiftdevnotes","abstract":[{"type":"text","text":"An ongoing collection of notes and example code for interesting and obscure features"},{"text":" ","type":"text"},{"type":"text","text":"of the Swift programming language and the SwiftUI framework."}],"title":"SwiftDevNotes","role":"collection"},"doc://SwiftDevNotes/documentation/SwiftDevNotes/IsOptional/asOptional":{"kind":"symbol","type":"topic","identifier":"doc:\/\/SwiftDevNotes\/documentation\/SwiftDevNotes\/IsOptional\/asOptional","url":"\/documentation\/swiftdevnotes\/isoptional\/asoptional","required":true,"abstract":[{"type":"text","text":"Get the value as an optional type"}],"title":"asOptional","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"asOptional","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:13SwiftDevNotes10IsOptionalP7WrappedQa","text":"Wrapped","kind":"typeIdentifier"},{"text":"?","kind":"text"}]},"doc://SwiftDevNotes/s23ExpressibleByNilLiteralP":{"title":"Swift.ExpressibleByNilLiteral","type":"unresolvable","identifier":"doc:\/\/SwiftDevNotes\/s23ExpressibleByNilLiteralP"}}}