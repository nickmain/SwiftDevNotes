{"sections":[],"schemaVersion":{"patch":0,"major":0,"minor":3},"abstract":[{"type":"text","text":"Optional methods in protocols can be simulated by providing an unconstrained default"},{"type":"text","text":" "},{"text":"implementation in an extension.","type":"text"}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/SwiftDevNotes\/documentation\/SwiftDevNotes"]]},"metadata":{"externalID":"s:13SwiftDevNotes27ProtocolWithOptionalMethodsP","navigatorTitle":[{"text":"ProtocolWithOptionalMethods","kind":"identifier"}],"title":"ProtocolWithOptionalMethods","role":"symbol","roleHeading":"Protocol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"ProtocolWithOptionalMethods","kind":"identifier"}],"modules":[{"name":"SwiftDevNotes"}],"symbolKind":"protocol"},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"ProtocolWithOptionalMethods","kind":"identifier"}],"platforms":["iOS"]}]},{"content":[{"text":"Overview","level":2,"anchor":"overview","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Example:"}]},{"code":["public extension ProtocolWithOptionalMethods {","    func doSomething() {}","}"],"syntax":"swift","type":"codeListing"}],"kind":"content"}],"identifier":{"url":"doc:\/\/SwiftDevNotes\/documentation\/SwiftDevNotes\/ProtocolWithOptionalMethods","interfaceLanguage":"swift"},"topicSections":[{"identifiers":["doc:\/\/SwiftDevNotes\/documentation\/SwiftDevNotes\/ProtocolWithOptionalMethods\/doSomething()-392a1"],"title":"Instance Methods"}],"seeAlsoSections":[{"identifiers":["doc:\/\/SwiftDevNotes\/documentation\/SwiftDevNotes\/IsOptional","doc:\/\/SwiftDevNotes\/documentation\/SwiftDevNotes\/NonCopyable"],"title":"Swift Type System","generated":true}],"variants":[{"paths":["\/documentation\/swiftdevnotes\/protocolwithoptionalmethods"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://SwiftDevNotes/documentation/SwiftDevNotes/ProtocolWithOptionalMethods":{"title":"ProtocolWithOptionalMethods","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ProtocolWithOptionalMethods"}],"abstract":[{"text":"Optional methods in protocols can be simulated by providing an unconstrained default","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"implementation in an extension."}],"url":"\/documentation\/swiftdevnotes\/protocolwithoptionalmethods","identifier":"doc:\/\/SwiftDevNotes\/documentation\/SwiftDevNotes\/ProtocolWithOptionalMethods","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"ProtocolWithOptionalMethods"}],"role":"symbol"},"doc://SwiftDevNotes/documentation/SwiftDevNotes/IsOptional":{"role":"symbol","title":"IsOptional","navigatorTitle":[{"text":"IsOptional","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/SwiftDevNotes\/documentation\/SwiftDevNotes\/IsOptional","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"IsOptional"}],"url":"\/documentation\/swiftdevnotes\/isoptional","abstract":[{"text":"Allow “where” clauses to specify that a type is Optional.","type":"text"}],"type":"topic"},"doc://SwiftDevNotes/documentation/SwiftDevNotes":{"url":"\/documentation\/swiftdevnotes","abstract":[{"text":"An ongoing collection of notes and example code for interesting and obscure features","type":"text"},{"text":" ","type":"text"},{"text":"of the Swift programming language and the SwiftUI framework.","type":"text"}],"identifier":"doc:\/\/SwiftDevNotes\/documentation\/SwiftDevNotes","title":"SwiftDevNotes","role":"collection","kind":"symbol","type":"topic"},"doc://SwiftDevNotes/documentation/SwiftDevNotes/NonCopyable":{"navigatorTitle":[{"kind":"identifier","text":"NonCopyable"}],"url":"\/documentation\/swiftdevnotes\/noncopyable","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"NonCopyable"}],"abstract":[{"text":"See ","type":"text"},{"type":"reference","identifier":"https:\/\/github.com\/apple\/swift-evolution\/blob\/main\/proposals\/0390-noncopyable-structs-and-enums.md","isActive":true}],"identifier":"doc:\/\/SwiftDevNotes\/documentation\/SwiftDevNotes\/NonCopyable","role":"symbol","title":"NonCopyable","kind":"symbol","type":"topic"},"https://github.com/apple/swift-evolution/blob/main/proposals/0390-noncopyable-structs-and-enums.md":{"url":"https:\/\/github.com\/apple\/swift-evolution\/blob\/main\/proposals\/0390-noncopyable-structs-and-enums.md","titleInlineContent":[{"type":"text","text":"0390-noncopyable-structs-and-enums"}],"type":"link","identifier":"https:\/\/github.com\/apple\/swift-evolution\/blob\/main\/proposals\/0390-noncopyable-structs-and-enums.md","title":"0390-noncopyable-structs-and-enums"},"doc://SwiftDevNotes/documentation/SwiftDevNotes/ProtocolWithOptionalMethods/doSomething()-392a1":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"doSomething"},{"text":"()","kind":"text"}],"url":"\/documentation\/swiftdevnotes\/protocolwithoptionalmethods\/dosomething()-392a1","type":"topic","defaultImplementations":1,"abstract":[],"identifier":"doc:\/\/SwiftDevNotes\/documentation\/SwiftDevNotes\/ProtocolWithOptionalMethods\/doSomething()-392a1","role":"symbol","title":"doSomething()","kind":"symbol","required":true}}}