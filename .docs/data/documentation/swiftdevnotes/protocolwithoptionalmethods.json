{"identifier":{"url":"doc:\/\/SwiftDevNotes\/documentation\/SwiftDevNotes\/ProtocolWithOptionalMethods","interfaceLanguage":"swift"},"schemaVersion":{"patch":0,"minor":3,"major":0},"kind":"symbol","metadata":{"roleHeading":"Protocol","modules":[{"name":"SwiftDevNotes"}],"role":"symbol","symbolKind":"protocol","externalID":"s:13SwiftDevNotes27ProtocolWithOptionalMethodsP","navigatorTitle":[{"text":"ProtocolWithOptionalMethods","kind":"identifier"}],"title":"ProtocolWithOptionalMethods","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"ProtocolWithOptionalMethods","kind":"identifier"}]},"sections":[],"seeAlsoSections":[{"generated":true,"title":"Swift Type System","identifiers":["doc:\/\/SwiftDevNotes\/documentation\/SwiftDevNotes\/IsOptional","doc:\/\/SwiftDevNotes\/documentation\/SwiftDevNotes\/NonCopyable"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["iOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ProtocolWithOptionalMethods"}]}]},{"kind":"content","content":[{"type":"heading","level":2,"text":"Overview","anchor":"overview"},{"inlineContent":[{"type":"text","text":"Example:"}],"type":"paragraph"},{"code":["public extension ProtocolWithOptionalMethods {","    func doSomething() {}","}"],"type":"codeListing","syntax":"swift"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftdevnotes\/protocolwithoptionalmethods"]}],"hierarchy":{"paths":[["doc:\/\/SwiftDevNotes\/documentation\/SwiftDevNotes"]]},"topicSections":[{"identifiers":["doc:\/\/SwiftDevNotes\/documentation\/SwiftDevNotes\/ProtocolWithOptionalMethods\/doSomething()-392a1"],"title":"Instance Methods"}],"abstract":[{"text":"Optional methods in protocols can be simulated by providing an unconstrained default","type":"text"},{"type":"text","text":" "},{"text":"implementation in an extension.","type":"text"}],"references":{"doc://SwiftDevNotes/documentation/SwiftDevNotes":{"kind":"symbol","title":"SwiftDevNotes","type":"topic","url":"\/documentation\/swiftdevnotes","identifier":"doc:\/\/SwiftDevNotes\/documentation\/SwiftDevNotes","role":"collection","abstract":[{"text":"An ongoing collection of notes and example code for interesting and obscure features","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"of the Swift programming language and the SwiftUI framework."}]},"doc://SwiftDevNotes/documentation/SwiftDevNotes/NonCopyable":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"NonCopyable"}],"title":"NonCopyable","identifier":"doc:\/\/SwiftDevNotes\/documentation\/SwiftDevNotes\/NonCopyable","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"NonCopyable"}],"abstract":[{"type":"text","text":"See "},{"type":"reference","identifier":"https:\/\/github.com\/apple\/swift-evolution\/blob\/main\/proposals\/0390-noncopyable-structs-and-enums.md","isActive":true}],"url":"\/documentation\/swiftdevnotes\/noncopyable","role":"symbol","type":"topic"},"doc://SwiftDevNotes/documentation/SwiftDevNotes/ProtocolWithOptionalMethods":{"kind":"symbol","navigatorTitle":[{"text":"ProtocolWithOptionalMethods","kind":"identifier"}],"title":"ProtocolWithOptionalMethods","identifier":"doc:\/\/SwiftDevNotes\/documentation\/SwiftDevNotes\/ProtocolWithOptionalMethods","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ProtocolWithOptionalMethods"}],"abstract":[{"type":"text","text":"Optional methods in protocols can be simulated by providing an unconstrained default"},{"type":"text","text":" "},{"type":"text","text":"implementation in an extension."}],"url":"\/documentation\/swiftdevnotes\/protocolwithoptionalmethods","role":"symbol","type":"topic"},"doc://SwiftDevNotes/documentation/SwiftDevNotes/IsOptional":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"IsOptional"}],"title":"IsOptional","identifier":"doc:\/\/SwiftDevNotes\/documentation\/SwiftDevNotes\/IsOptional","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"IsOptional"}],"abstract":[{"type":"text","text":"Allow “where” clauses to specify that a type is Optional."}],"url":"\/documentation\/swiftdevnotes\/isoptional","role":"symbol","type":"topic"},"https://github.com/apple/swift-evolution/blob/main/proposals/0390-noncopyable-structs-and-enums.md":{"title":"0390-noncopyable-structs-and-enums","identifier":"https:\/\/github.com\/apple\/swift-evolution\/blob\/main\/proposals\/0390-noncopyable-structs-and-enums.md","url":"https:\/\/github.com\/apple\/swift-evolution\/blob\/main\/proposals\/0390-noncopyable-structs-and-enums.md","titleInlineContent":[{"type":"text","text":"0390-noncopyable-structs-and-enums"}],"type":"link"},"doc://SwiftDevNotes/documentation/SwiftDevNotes/ProtocolWithOptionalMethods/doSomething()-392a1":{"abstract":[],"identifier":"doc:\/\/SwiftDevNotes\/documentation\/SwiftDevNotes\/ProtocolWithOptionalMethods\/doSomething()-392a1","url":"\/documentation\/swiftdevnotes\/protocolwithoptionalmethods\/dosomething()-392a1","role":"symbol","defaultImplementations":1,"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"doSomething"},{"kind":"text","text":"()"}],"kind":"symbol","title":"doSomething()","required":true,"type":"topic"}}}